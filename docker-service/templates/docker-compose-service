{% from "monitoring/map.jinja" import monitoring with context %}
#!/bin/bash
### BEGIN INIT INFO
# Provides:          docker-compose-{{service_name}}
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 6
# Short-Description: docker-compose {{service_name}}
# Description:       Start/stop {{service_name}} containers
### END INIT INFO

#TODO: add docker-compose output parsing and run conntrack only when needed
#TODO: replace status with docker-compose parser and checker if containers are running (if really needed)


start()
{
    STATUS=`/usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml ps`
    if ! echo $STATUS | grep Up; then
        echo "service /etc/docker-compose/{{service_name}}/docker-compose.yml not running..."
        # make sure we clean up if the service is not running
        stop
    fi

    echo "starting /etc/docker-compose/{{service_name}}/docker-compose.yml ..."
    /usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml up -d
    ret=$?
    /usr/sbin/conntrack -D -p udp
    exit ${ret}
}

stop()
{
    echo "stopping /etc/docker-compose/{{service_name}}/docker-compose.yml ..."
    /usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml down
    /usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml kill
}

status()
{
    STATUS=`/usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml ps`
    if ! echo $STATUS | grep Up; then
        echo "service /etc/docker-compose/{{service_name}}/docker-compose.yml not running..."
        exit 1
    fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  reload)
    start
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  ps)
    /usr/local/bin/docker-compose -p {{service_name}} -f /etc/docker-compose/{{service_name}}/docker-compose.yml ps
    ;;
  *)
    echo "Usage: $0 {start|stop|reload|restart|ps}"
    exit 1
    ;;
esac
