{% from 'mongodb/map.jinja' import mongodb with context %}

##
### Basic Defaults
##

# [GR] Not all interfaces are created equally. As far as mongo is concerned 127.0.0.2 != 127.0.0.1,
# and a hosts record pointing [hostname] to 127.0.0.2 != mongo itself listening on localhost, or its public interface
# Hence, if we're binding locally we (and this assumes a single local non-replica set instance):
{% if mongodb.bind_url_is_local %}
bind_ip = mongodb-01.local
{% elif 'provider' in grains and grains.provider == 'vagrant' %}
bind_ip = {{grains.ip_interfaces.eth1[0]}},127.0.0.1
{% else %}
# Otherwise we -
bind_ip = {{grains.ip_interfaces.eth0[0]}},127.0.0.1
{% endif %}

port = 27017
fork = true
pidfilepath = /var/run/mongodb/mongodb.pid
logpath = /var/log/mongodb/mongodb.log
dbpath = {{mongodb.dbpath}}
journal = true

# Enables periodic logging of CPU utilization and I/O wait
#cpu = true

# Turn on/off security.  Off is currently the default
{% if mongodb.auth %}
auth = true
{% else %}
noauth = true
{% endif %}

# Verbose logging output.
#verbose = true

# Inspect all client data for validity on receipt (useful for
# developing drivers)
#objcheck = true

# Enable db quota management
#quota = true

# Set oplogging level where n is
#   0=off (default)
#   1=W
#   2=R
#   3=both
#   7=W+some reads
#oplog = 0

# Diagnostic/debugging option
#nocursors = true

# Ignore query hints
#nohints = true

# Disable the HTTP interface (Defaults to port+1000).
nohttpinterface = true

# Turns off server-side scripting.  This will result in greatly limited
# functionality
#noscripting = true

# Turns off table scans.  Any query that would do a table scan fails.
#notablescan = true

# Disable data file preallocation.
#noprealloc = true

# Specify .ns file size for new databases.
# nssize = <size>

# Accout token for Mongo monitoring server.
#mms-token = <token>

# Server name for Mongo monitoring server.
#mms-name = <server-name>

# Ping interval for Mongo monitoring server.
#mms-interval = <seconds>

# Replication Options

# in replicated mongo databases, specify here whether this is a slave or master
#slave = true
#source = master.example.com
# Slave only: specify a single database to replicate
#only = master.example.com
# or
#master = true
#source = slave.example.com

# Address of a server to pair with.
#pairwith = <server:port>
# Address of arbiter server.
#arbiter = <server:port>
# Automatically resync if slave data is stale
#autoresync
# Custom size for replication operation log.
#oplogSize = <MB>
# Size limit for in-memory storage of op ids.
#opIdMem = <bytes>
{% if mongodb.rs %}
replSet = {{mongodb.rs}}
{% endif %}

{% if mongodb.key_string %}
keyFile = /etc/mongodb.key
{% endif %}
