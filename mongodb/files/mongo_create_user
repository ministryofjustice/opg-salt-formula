#!/bin/sh
set -e

admin_user="admin"

while getopts u:p: o; do
  case "$o" in
    u)  admin_user="${OPTARG}";;
    p)  admin_password="${OPTARG}";;
    [?])  echo "Usage: $0 [-u user] [-p password] db_name db_owner db_owner_password" >&2
          exit 1;;
  esac
done
shift $(( $OPTIND - 1 ))

db_name=$1
user_name=$2
user_pass=$3

if [ -z $admin_password ];
then
  connection_str="mongo"
else
  connection_str="mongo --port 27017 -u $admin_user -p $admin_password --authenticationDatabase admin"
fi

is_master=`$connection_str admin --quiet --eval "db.isMaster()['ismaster']"`
if [ "$is_master" = "true" ]; then
  # And the user is not present
  output=`$connection_str --quiet --eval "printjson(db.getSiblingDB('$db_name').getUser('$user_name'))"`
  if [ "X$output" = 'Xnull' ]; then
    $connection_str --eval "db.getSiblingDB('$db_name').createUser({user: '$user_name', pwd: '$user_pass', roles: [ { role: \"readWrite\", db: '$db_name'}] } )"
  else
    # The user is present, but the password may have changed, so let's update it
    $connection_str --quiet --eval "db.getSiblingDB('$db_name').changeUserPassword('$user_name','$user_pass');"
  fi
fi
